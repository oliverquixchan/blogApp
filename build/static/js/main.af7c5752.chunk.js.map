{"version":3,"sources":["components/Blog.js","services/login.js","reducers/messageReducer.js","reducers/userReducer.js","components/Login.js","components/Logout.js","components/NewBlogForm.js","components/Message.js","components/Toggable.js","services/blogs.js","reducers/blogsReducer.js","components/Bloglist.js","components/Users.js","components/Menu.js","components/UserView.js","components/BlogView.js","services/user.js","reducers/usersReducer.js","App.js","store.js","index.js"],"names":["Blog","blog","somebodyLikedOMG","handleDelete","useState","show","setShow","className","to","id","title","author","Button","variant","onClick","url","likes","size","login","credentials","a","axios","post","response","data","messageChange","message","type","messageReducer","state","action","addUser","user","userReducer","Login","username","setUsername","password","setPassword","dispatch","useDispatch","handleLogin","event","preventDefault","loginService","window","localStorage","setItem","JSON","stringify","setTimeout","Form","onSubmit","Group","value","name","onChange","target","Logout","useSelector","removeItem","NewBlogForm","createNewBlog","setTitle","setAuthor","setUrl","Message","Toggable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","displayName","baseUrl","token","getAll","get","then","create","newObject","config","headers","Authorization","setToken","newToken","update","newBlog","put","remove","delete","comment","deleteBlog","blogService","console","log","blogsReducer","concat","map","updatedBlog","filter","commentedBlog","Bloglist","blogs","blogFormRef","useRef","blogEntry","find","likedBlog","updateBlog","confirm","blogObject","createBlog","current","Table","striped","Users","users","length","Menu","Nav","as","Item","Link","href","UserView","BlogView","setComment","Card","width","comments","commentBlog","usersReducer","App","matchUser","useRouteMatch","params","matchBlog","useEffect","sort","b","usersService","loggedUserJSON","getItem","parse","path","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"oQAwCeA,EApCF,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,iBAAkBC,EAAmB,EAAnBA,aAAmB,EAC/BC,oBAAS,GADsB,mBAChDC,EADgD,KAC1CC,EAD0C,KAMvD,OAAY,IAATD,EAEK,+BACI,qBAAIE,UAAU,cAAd,UACI,cAAC,IAAD,CAAMC,GAAE,gBAAWP,EAAKQ,IAAxB,SAA8B,8BAAIR,EAAKS,MAAT,SAC9B,8BAAIT,EAAKU,OAAT,UAEJ,6BACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS,kBAAMR,GAASD,IAAlD,uBAMR,+BACI,qBAAIE,UAAU,cAAd,UACI,cAAC,IAAD,CAAMC,GAAE,gBAAWP,EAAKQ,IAAxB,SAA8B,8BAAIR,EAAKS,MAAT,SAC9B,8BAAIT,EAAKU,OAAT,OACA,4BAAIV,EAAKc,MACT,oBAAGN,GAAG,OAAN,UAAcR,EAAKe,MAAnB,IAA0B,cAACJ,EAAA,EAAD,CAAQK,KAAK,KAAKR,GAAG,aAAaK,QAASZ,EAA3C,mBAA1B,OACA,cAACU,EAAA,EAAD,CAAQC,QAAQ,SAASI,KAAK,KAAKH,QAASX,EAA5C,uBAEJ,6BACI,cAACS,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS,kBAAMR,GAASD,IAAlD,gC,iBCzBL,GAAEa,MALN,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACaC,IAAMC,KAHjB,aAG+BH,GADjC,cACJI,EADI,yBAEHA,EAASC,MAFN,2CAAH,uDCOEC,EAAgB,SAACC,GAC1B,MAAO,CACHC,KAAM,SACNH,KAAME,IAUCE,EAvBQ,WAA2B,IAA1BC,EAAyB,uDAAjB,KAAMC,EAAW,uCAC7C,OAAQA,EAAOH,MACf,IAAK,SACD,OAAOG,EAAON,KAClB,IAAK,QACD,OAAO,KACX,QAAS,OAAOK,I,OCEPE,EAAU,SAACC,GACpB,MAAO,CACHL,KAAM,UACNH,KAAMQ,IAKCC,EAhBK,WAA4B,IAA3BJ,EAA0B,uDAAlB,KAAMC,EAAY,uCAC3C,OAAQA,EAAOH,MACf,IAAK,UACD,OAAOG,EAAON,KAClB,QAAS,OAAOK,I,QCuDLK,EAnDD,WAAO,IAAD,EACgB9B,mBAAS,IADzB,mBACT+B,EADS,KACCC,EADD,OAEgBhC,mBAAS,IAFzB,mBAETiC,EAFS,KAECC,EAFD,KAIVC,EAAWC,cACXC,EAAW,uCAAG,WAAOC,GAAP,eAAAtB,EAAA,6DAChBsB,EAAMC,iBADU,kBAIOC,EAAa1B,MAAM,CAClCiB,WAAUE,aALF,OAINL,EAJM,OAOZa,OAAOC,aAAaC,QAChB,aAAcC,KAAKC,UAAUjB,IAEjCO,EAASR,EAAQC,IACjBI,EAAY,IACZE,EAAY,IACZC,EAASd,EAAc,cACvByB,YAAW,WACPX,EFVL,CACHZ,KAAM,YEUC,KAhBS,kDAkBZY,EAASd,EAAc,sBACvByB,YAAW,WACPX,EFfL,CACHZ,KAAM,YEeC,KArBS,0DAAH,sDA0BjB,OACI,qBAAKpB,UAAU,mCAAf,SACI,cAAC4C,EAAA,EAAD,CAAMC,SAAUX,EAAalC,UAAU,yBAAvC,SACI,eAAC4C,EAAA,EAAKE,MAAN,WAEI,2CAC0B,uBAAO5C,GAAG,WAAWkB,KAAK,OAAO2B,MAAOnB,EAAUoB,KAAK,WAAWC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBrB,EAAYqB,EAAOH,aAGzI,2CAC0B,uBAAO7C,GAAG,WAAWkB,KAAK,WAAW2B,MAAOjB,EAAUkB,KAAK,WAAWC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBnB,EAAYmB,EAAOH,aAG7I,cAAC1C,EAAA,EAAD,CAAQH,GAAG,eAAekB,KAAK,SAA/B,2BC9BL+B,EAjBA,WACX,IAAMnB,EAAWC,cACXR,EAAO2B,aAAY,SAAA9B,GAAK,OAAIA,EAAMG,QAUxC,OACI,8BAAIA,EAAKG,SAAT,iBAAgC,cAACvB,EAAA,EAAD,CAAQE,QATxB,WAChB+B,OAAOC,aAAac,WAAW,cAC/BrB,EAASR,EAAQ,OACjBQ,EAASd,EAAc,eACvByB,YAAW,WACPX,EHID,CACHZ,KAAM,YGJH,MAG4Dd,QAAQ,OAAOI,KAAK,KAAnD,wBCgBzB4C,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACb1D,mBAAS,IADI,mBAChCM,EADgC,KACzBqD,EADyB,OAEX3D,mBAAS,IAFE,mBAEhCO,EAFgC,KAExBqD,EAFwB,OAGjB5D,mBAAS,IAHQ,mBAGhCW,EAHgC,KAG3BkD,EAH2B,KAoBvC,OACI,8BACI,uBAAMb,SAhBQ,SAACV,GACnBA,EAAMC,iBAENmB,EAAc,CACVpD,MAAOA,EACPC,OAAQA,EACRI,IAAKA,IAETgD,EAAS,IACTE,EAAO,IACPD,EAAU,KAMN,UACI,wCAAU,uBAAOvD,GAAG,QAAQkB,KAAK,OAAO2B,MAAO5C,EAAO6C,KAAK,QAAQC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBM,EAASN,EAAOH,aAC7G,yCAAW,uBAAO7C,GAAG,SAASkB,KAAK,OAAO2B,MAAO3C,EAAQ4C,KAAK,SAASC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBO,EAAUP,EAAOH,aAClH,sCAAQ,uBAAO7C,GAAG,MAAMkB,KAAK,OAAO2B,MAAOvC,EAAKwC,KAAK,MAAMC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBQ,EAAOR,EAAOH,aACnG,wBAAQ7C,GAAG,mBAAmBkB,KAAK,SAAnC,0BCaDuC,EAtCC,WACZ,IAAMxC,EAAUiC,aAAY,SAAA9B,GAAK,OAAIA,EAAMH,WAE3C,OAAgB,OAAZA,EACO,KACY,sBAAZA,EAEH,qBAAKnB,UAAU,QAAf,SACKmB,IAGU,cAAZA,GAMY,iBAAZA,EAJH,qBAAKnB,UAAU,UAAf,SACKmB,IASU,iBAAZA,EAEH,qBAAKnB,UAAU,QAAf,SACKmB,IAGU,eAAZA,EAEH,qBAAKnB,UAAU,UAAf,SACKmB,SAHN,GC5BLyC,EAAWC,IAAMC,YAAW,SAACC,EAAOC,GAAS,IAAD,EAChBnE,oBAAS,GADO,mBACvCoE,EADuC,KAC9BC,EAD8B,KAGxCC,EAAkB,CAAEC,QAASH,EAAU,OAAS,IAChDI,EAAkB,CAAED,QAASH,EAAU,GAAK,QAE5CK,EAAmB,WACrBJ,GAAYD,IAShB,OANAM,8BAAoBP,GAAK,WACrB,MAAO,CACHM,uBAKJ,gCACI,qBAAKE,MAAOL,EAAZ,SACI,cAAC9D,EAAA,EAAD,CAAQE,QAAS+D,EAAjB,SAAoCP,EAAMU,gBAE9C,sBAAKD,MAAOH,EAAZ,UACKN,EAAMW,SACP,cAACrE,EAAA,EAAD,CAAQE,QAAS+D,EAAjB,6BAMhBV,EAASe,YAAc,YAMRf,QCtCTgB,EAAU,kCAEZC,EAAQ,KAsCG,GAAEC,OAhCF,WAEX,OADgBhE,IAAMiE,IAAIH,GACXI,MAAK,SAAAhE,GAAQ,OAAIA,EAASC,SA8BpBgE,OA3Bb,uCAAG,WAAMC,GAAN,iBAAArE,EAAA,6DACLsE,EAAS,CACXC,QAAS,CAAEC,cAAeR,IAFnB,SAKY/D,IAAMC,KAAK6D,EAASM,EAAWC,GAL3C,cAKLnE,EALK,yBAMJA,EAASC,MANL,2CAAH,sDA2BqBqE,SApChB,SAAAC,GACbV,EAAK,iBAAaU,IAmCqBC,OAlB/B,uCAAG,WAAOtF,EAAIuF,GAAX,eAAA5E,EAAA,sEACYC,IAAM4E,IAAN,UAAad,EAAb,YAAwB1E,GAAMuF,GAD1C,cACLzE,EADK,yBAEJA,EAASC,MAFL,2CAAH,wDAkBuC0E,OAbvC,uCAAG,WAAOzF,GAAP,iBAAAW,EAAA,6DACLsE,EAAS,CACXC,QAAS,CAAEC,cAAeR,IAFnB,SAIY/D,IAAM8E,OAAN,UAAgBhB,EAAhB,YAA2B1E,GAAMiF,GAJ7C,cAILnE,EAJK,yBAKJA,EAASC,MALL,2CAAH,sDAa+C4E,QAL9C,uCAAG,WAAO3F,EAAI2F,GAAX,eAAAhF,EAAA,sEACWC,IAAMC,KAAN,UAAc6D,EAAd,YAAyB1E,EAAzB,aAAwC2F,GADnD,cACN7E,EADM,yBAELA,EAASC,MAFJ,2CAAH,yDC8BA6E,EAAc,SAAE5F,GACzB,8CAAO,WAAM8B,GAAN,SAAAnB,EAAA,+EAEOkF,EAAYJ,OAAOzF,GAF1B,OAGC8B,EAAS,CACLZ,KAAM,SACNH,KAAMf,IALX,+CAQC8F,QAAQC,IAAR,MARD,wDAAP,uDA4BWC,EA3FM,WAAyB,IAAxB5E,EAAuB,uDAAf,GAAIC,EAAW,uCACzC,OAAQA,EAAOH,MACf,IAAK,aACD,OAAOG,EAAON,KAClB,IAAK,MACD,OAAOK,EAAM6E,OAAO5E,EAAON,MAC/B,IAAK,SACD,OAAOK,EAAM8E,KAAI,SAAA1G,GAAI,OAAIA,EAAKQ,KAAOqB,EAAON,KAAKoF,YAAYnG,GAAKR,EAAO6B,EAAON,KAAKoF,eACzF,IAAK,SACD,OAAO/E,EAAMgF,QAAO,SAAA5G,GAAI,OAAIA,EAAKQ,KAAOqB,EAAON,QACnD,IAAK,UACD,OAAOK,EAAM8E,KAAI,SAAA1G,GAAI,OAAIA,EAAKQ,KAAOqB,EAAON,KAAKsF,cAAcrG,GAAKR,EAAO6B,EAAON,KAAKsF,iBAC3F,QAAS,OAAOjF,I,QCoELkF,EApEE,WACb,IAAMC,EAAQrD,aAAY,SAAA9B,GAAK,OAAIA,EAAMmF,SACnChF,EAAQ2B,aAAY,SAAA9B,GAAK,OAAIA,EAAMG,QACnCO,EAAWC,cAGXyE,EAAcC,mBASdhH,EAAmB,SAACO,GACtB,IAAM0G,EAAYH,EAAMI,MAAK,SAAAnH,GAAI,OAAIA,EAAKQ,KAAOA,KAC3C4G,EAAS,2BAAQF,GAAR,IAAmBnG,MAAOmG,EAAUnG,MAAO,IAC1DuB,EDmBkB,SAAE9B,EAAI4G,GAC5B,8CAAO,WAAM9E,GAAN,eAAAnB,EAAA,+EAE2BkF,EAAYP,OAAOtF,EAAI4G,GAFlD,OAEOT,EAFP,OAGCrE,EAAS,CACLZ,KAAM,SACNH,KAAM,CAAEoF,iBALb,gDAQCL,QAAQC,IAAR,MARD,yDAAP,sDCpBac,CAAW7G,EAAI4G,KAGtBlH,EAAY,uCAAG,WAAOF,GAAP,SAAAmB,EAAA,sDACdyB,OAAO0E,QAAP,sBAA8BtH,EAAKS,MAAnC,eAA+CT,EAAKU,OAApD,QACC4B,EAAS8D,EAAWpG,EAAKQ,KAFZ,2CAAH,sDAMlB,OAAa,OAATuB,EAGI,sBAAKzB,UAAU,wBAAf,UACI,uCACA,cAAC,EAAD,IACA,cAAC,EAAD,OAOJ,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,uCACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAUyE,YAAY,eAAeT,IAAK0C,EAA1C,SACI,cAAC,EAAD,CAAanD,cApCX,SAAC0D,GACnBjF,EDIkB,SAACiF,GACvB,8CAAO,WAAMjF,GAAN,eAAAnB,EAAA,+EAEwBkF,EAAYd,OAAOgC,GAF3C,OAEOjG,EAFP,OAGCgB,EAAS,CACLZ,KAAM,MACNH,KAAMD,IAEVgB,EAASd,EAAc,iBACvByB,YAAW,WACPX,ERtBL,CACHZ,KAAM,YQsBC,KAVJ,gDAYCY,EAASd,EAAc,iBACvByB,YAAW,WACPX,ER3BL,CACHZ,KAAM,YQ2BC,KAfJ,yDAAP,sDCLa8F,CAAWD,IACpBP,EAAYS,QAAQ7C,2BAqCZ,eAAC8C,EAAA,EAAD,CAAOC,SAAO,EAACrH,UAAU,OAAzB,UACI,gCACI,+BACI,uCACA,8CAGR,gCACKyG,EAAML,KAAI,SAAA1G,GAAI,OAAI,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAkB,kBAAMA,EAAiBD,EAAKQ,KAAKN,aAAc,kBAAMA,EAAaF,KAAzGA,EAAKQ,YAG3C,qBAAKF,UAAU,cAAf,SACI,cAAC,EAAD,UC1DLsH,EAdD,WACV,IAAMC,EAAQnE,aAAY,SAAA9B,GAAK,OAAIA,EAAMiG,SAGzC,OAEI,gCACI,uCACCA,EAAMnB,KAAI,SAAA3E,GAAI,OAAI,cAAC,IAAD,CAAMxB,GAAE,gBAAWwB,EAAKvB,IAAxB,SAA4C,8BAAK,8BAAIuB,EAAKuB,KAAT,IAAgBvB,EAAKgF,MAAMe,aAAzC/F,EAAKvB,W,QCWxDuH,EAnBF,WACT,OACI,8BACI,eAACC,EAAA,EAAD,CAAK1H,UAAU,yBAAyB2H,GAAG,KAA3C,UACI,cAACD,EAAA,EAAIE,KAAL,CAAUD,GAAG,KAAb,SACI,cAACD,EAAA,EAAIG,KAAL,CAAUC,KAAK,IAAIH,GAAG,OAAtB,SACI,cAAC,IAAD,CAAM1H,GAAG,IAAT,sBAGR,cAACyH,EAAA,EAAIE,KAAL,CAAUD,GAAG,KAAb,SACI,cAACD,EAAA,EAAIG,KAAL,CAAUC,KAAK,IAAIH,GAAG,OAAtB,SACI,cAAC,IAAD,CAAM1H,GAAG,SAAT,6BCIT8H,EAjBE,SAAC,GAAc,IAAZtG,EAAW,EAAXA,KAEhB,OAAKA,EAKD,gCACI,6BAAKA,EAAKuB,OACV,+CACA,6BACKvB,EAAKgF,MAAML,KAAI,SAAA1G,GAAI,OAAI,6BAAmBA,EAAKS,OAAfT,EAAKQ,YARvC,M,QC2CA8H,EA3CE,SAAC,GAAc,IAAZtI,EAAW,EAAXA,KAAW,EACGG,mBAAS,IADZ,mBACpBgG,EADoB,KACXoC,EADW,KAErBjG,EAAWC,cAIX7B,EAFQgD,aAAY,SAAA9B,GAAK,OAAIA,EAAMiG,SAEpBV,MAAK,SAAApF,GAAI,OAAIA,EAAKuB,OAAStD,EAAK+B,KAAKuB,QAQ1D,OAAKtD,EAKD,qBAAKM,UAAU,gCAAf,SACI,eAACkI,EAAA,EAAD,CAAM1D,MAAO,CAAE2D,MAAO,SAAWnI,UAAU,MAA3C,UACI,sBAAKA,UAAU,cAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BN,EAAKS,QAClC,oBAAGH,UAAU,cAAb,mBAAiC,mBAAG8H,KAAK,GAAR,SAAapI,EAAKc,SACnD,8BAAId,EAAKe,MAAT,YACCL,EAAS,qCAAQA,EAAO4C,QAAY,QAEzC,gCACI,0CACEtD,EAAK0I,WAAa,GAAK,iDAA0B1I,EAAK0I,SAAShC,KAAI,SAAAP,GAAO,OAAI,4BAAkBA,GAAVA,SAE5F,gCACI,8CACA,uBAAMhD,SAzBG,SAACV,GACtBA,EAAMC,iBACNJ,ELiEmB,SAAE9B,EAAI2F,GAE7B,8CAAO,WAAM7D,GAAN,eAAAnB,EAAA,+EAG6BkF,EAAYF,QAAQ3F,EAAI2F,GAHrD,OAGOU,EAHP,OAICvE,EAAS,CACLZ,KAAM,UACNH,KAAM,CAAEsF,mBANb,gDASCP,QAAQC,IAAR,MATD,yDAAP,sDKnEaoC,CAAY3I,EAAKQ,GAAI,CAAE2F,aAChCoC,EAAW,KAsBC,UACI,uBAAOjI,UAAU,OAAOE,GAAG,MAAMkB,KAAK,OAAO2B,MAAQ8C,EAAU7C,KAAK,UAAUC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB+E,EAAW/E,EAAOH,UAC1H,wBAAQ/C,UAAU,OAAOoB,KAAK,SAA9B,+BApBT,MCZA,EALA,WAEX,OADgBN,IAAMiE,IAHV,mCAIGC,MAAK,SAAAhE,GAAQ,OAAIA,EAASC,SCgB9BqH,EAnBM,WAA0B,IAAzBhH,EAAwB,uDAAhB,GAAIC,EAAY,uCAC1C,OAAQA,EAAOH,MACf,IAAK,kBACD,OAAOG,EAAON,KAClB,QAAS,OAAOK,ICiELiH,EA1DH,WACR,IAAMvG,EAAWC,cACXsF,EAAQnE,aAAY,SAAA9B,GAAK,OAAIA,EAAMiG,SACnCd,EAAQrD,aAAY,SAAA9B,GAAK,OAAIA,EAAMmF,SAEnC+B,EAAaC,YAAc,aAC3BhH,EAAO+G,EAAYjB,EAAMV,MAAK,SAAApF,GAAI,OAAIA,EAAKvB,KAAOsI,EAAUE,OAAOxI,MAAM,KAEzEyI,EAAYF,YAAc,aAC1B/I,EAAOiJ,EAAYlC,EAAMI,MAAK,SAAAnH,GAAI,OAAIA,EAAKQ,KAAOyI,EAAUD,OAAOxI,MAAM,KAuB/E,OApBA0I,qBAAU,WACN5G,ERLJ,uCAAO,WAAMA,GAAN,eAAAnB,EAAA,sEACiBkF,EAAYjB,SAD7B,OACG2B,EADH,OAEHzE,EAAU,CACNZ,KAAM,aACNH,KAAMwF,EAAMoC,MAAK,SAAChI,EAAGiI,GAAJ,OAAWjI,EAAEJ,MAAQqI,EAAErI,MAAS,GAAK,OAJvD,2CAAP,yDQMG,IAGHmI,qBAAU,WACN5G,EDnBJ,uCAAO,WAAMA,GAAN,eAAAnB,EAAA,sEACiBkI,IADjB,OACGxB,EADH,OAEHvF,EAAS,CACLZ,KAAK,kBACLH,KAAMsG,IAJP,2CAAP,yDCoBG,IAGHqB,qBAAU,WACN,IAAMI,EAAiB1G,OAAOC,aAAa0G,QAAQ,cACnD,GAAGD,EAAgB,CACf,IAAMvH,EAAOgB,KAAKyG,MAAMF,GACxBhH,EAASR,EAAQC,IACjBsE,EAAYT,SAAS7D,EAAKoD,UAE/B,IAIC,sBAAK7E,UAAU,YAAf,UACI,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOmJ,KAAK,SAAZ,SACI,cAAC,EAAD,MAGJ,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACI,cAAC,EAAD,CAAU1H,KAAMA,MAGpB,cAAC,IAAD,CAAO0H,KAAK,YAAZ,SACI,cAAC,EAAD,CAAUzJ,KAAMA,MAGpB,cAAC,IAAD,CAAOyJ,KAAK,IAAZ,SACI,cAAC,EAAD,a,gCCrDdC,EAAUC,0BAAgB,CAC5B5C,MAAOP,EACPzE,KAAMC,EACNP,QAASE,EACTkG,MAAOe,IAKIgB,EAFDC,sBAAYH,EAASI,8BAAoBC,0BAAgBC,OCPvEC,IAASC,OACL,cAAC,IAAD,UACI,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRO,SAASC,eAAe,W","file":"static/js/main.af7c5752.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Blog = ({ blog, somebodyLikedOMG, handleDelete }) => {\r\n    const [show, setShow] = useState(false)\r\n\r\n\r\n\r\n\r\n    if(show === false) {\r\n        return (\r\n            <tr>\r\n                <td className='blogDisplay'>\r\n                    <Link to={`/blog/${blog.id}`}><p>{blog.title} </p></Link>\r\n                    <p>{blog.author} </p>\r\n                </td>\r\n                <td>\r\n                    <Button variant='success' onClick={() => setShow(!show)}>show</Button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    } else {\r\n        return (\r\n            <tr>\r\n                <td className='blogDisplay'>\r\n                    <Link to={`/blog/${blog.id}`}><p>{blog.title} </p></Link>\r\n                    <p>{blog.author} </p>\r\n                    <p>{blog.url}</p>\r\n                    <p id=\"like\">{blog.likes} <Button size='sm' id=\"likeButton\" onClick={somebodyLikedOMG}>like!</Button> </p>\r\n                    <Button variant='danger' size='sm' onClick={handleDelete}>delete</Button>\r\n                </td>\r\n                <td>\r\n                    <Button variant='success' onClick={() => setShow(!show)}>hide details</Button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Blog","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default { login }","const messageReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n    case 'CHANGE':\r\n        return action.data\r\n    case 'RESET':\r\n        return null\r\n    default: return state\r\n    }\r\n}\r\n\r\nexport const messageChange = (message) => {\r\n    return {\r\n        type: 'CHANGE',\r\n        data: message\r\n    }\r\n}\r\n\r\nexport const messageReset = () => {\r\n    return {\r\n        type: 'RESET'\r\n    }\r\n}\r\n\r\nexport default messageReducer","const userReducer = (state = null, action ) => {\r\n    switch (action.type) {\r\n    case 'ADDUSER':\r\n        return action.data\r\n    default: return state\r\n    }\r\n}\r\n\r\nexport const addUser = (user) => {\r\n    return {\r\n        type: 'ADDUSER',\r\n        data: user\r\n    }\r\n}\r\n\r\n\r\nexport default userReducer","import React, { useState } from 'react'\r\nimport loginService from '../services/login'\r\nimport { messageChange, messageReset } from '../reducers/messageReducer'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addUser } from '../reducers/userReducer'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\n\r\nconst Login = () => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const handleLogin = async (event) => {\r\n        event.preventDefault()\r\n\r\n        try {\r\n            const user = await loginService.login({\r\n                username, password\r\n            })\r\n            window.localStorage.setItem(\r\n                'loggedUser', JSON.stringify(user)\r\n            )\r\n            dispatch(addUser(user))\r\n            setUsername('')\r\n            setPassword('')\r\n            dispatch(messageChange('Logged in'))\r\n            setTimeout(() => {\r\n                dispatch(messageReset())\r\n            }, 5000)\r\n        } catch (exception) {\r\n            dispatch(messageChange('Wrong credentials'))\r\n            setTimeout(() => {\r\n                dispatch(messageReset())\r\n            }, 5000)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='container justify-content-center'>\r\n            <Form onSubmit={handleLogin} className='justify-content-center'>\r\n                <Form.Group>\r\n\r\n                    <p>\r\n                                    username: <input id=\"username\" type=\"text\" value={username} name=\"Username\" onChange={({ target }) => setUsername(target.value)}/>\r\n                    </p>\r\n\r\n                    <p>\r\n                                    password: <input id=\"password\" type=\"password\" value={password} name=\"Username\" onChange={({ target }) => setPassword(target.value)}/>\r\n                    </p>\r\n\r\n                    <Button id=\"login-button\" type=\"submig\">login</Button>\r\n                </Form.Group>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { messageChange, messageReset } from '../reducers/messageReducer'\r\nimport { addUser } from '../reducers/userReducer'\r\nimport { Button } from 'react-bootstrap'\r\nconst Logout = () => {\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user)\r\n\r\n    const handleLogout= () => {\r\n        window.localStorage.removeItem('loggedUser')\r\n        dispatch(addUser(null))\r\n        dispatch(messageChange('Logged out'))\r\n        setTimeout(() => {\r\n            dispatch(messageReset())\r\n        }, 5000)\r\n    }\r\n    return (\r\n        <p>{user.username} is logged in <Button onClick={handleLogout} variant='dark' size='sm'>logout</Button></p>\r\n    )\r\n}\r\n\r\nexport default Logout\r\n","import React, { useState } from 'react'\r\n\r\nconst NewBlogForm = ({ createNewBlog }) => {\r\n    const [title, setTitle] = useState('')\r\n    const [author, setAuthor] = useState('')\r\n    const [url, setUrl] = useState('')\r\n\r\n\r\n    const handleNewNote = (event) => {\r\n        event.preventDefault()\r\n\r\n        createNewBlog({\r\n            title: title,\r\n            author: author,\r\n            url: url\r\n        })\r\n        setTitle('')\r\n        setUrl('')\r\n        setAuthor('')\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleNewNote}>\r\n                <p>title: <input id=\"title\" type=\"text\" value={title} name=\"title\" onChange={({ target }) => setTitle(target.value)}></input></p>\r\n                <p>author: <input id=\"author\" type=\"text\" value={author} name=\"author\" onChange={({ target }) => setAuthor(target.value)}></input></p>\r\n                <p>url: <input id=\"url\" type=\"text\" value={url} name=\"url\" onChange={({ target }) => setUrl(target.value)}></input></p>\r\n                <button id=\"submit-new-entry\" type=\"submit\">submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBlogForm","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Message = () => {\r\n    const message = useSelector(state => state.message)\r\n\r\n    if (message === null) {\r\n        return null\r\n    } else if (message === 'Wrong credentials') {\r\n        return (\r\n            <div className=\"error\">\r\n                {message}\r\n            </div>\r\n        )\r\n    } else if (message === 'Logged in') {\r\n        return (\r\n            <div className=\"success\">\r\n                {message}\r\n            </div>\r\n        )\r\n    } else if (message === 'Blog created') {\r\n        return (\r\n            <div className='success'>\r\n                {message}\r\n            </div>\r\n        )\r\n    } else if (message === 'Blog invalid') {\r\n        return (\r\n            <div className='error'>\r\n                {message}\r\n            </div>\r\n        )\r\n    } else if (message === 'Logged out') {\r\n        return (\r\n            <div className='success'>\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Toggable = React.forwardRef((props, ref) => {\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const hideWhenVisible = { display: visible ? 'none' : '' }\r\n    const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n    const toggleVisibility = () => {\r\n        setVisible(!visible)\r\n    }\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n            toggleVisibility\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div style={hideWhenVisible}>\r\n                <Button onClick={toggleVisibility}>{props.buttonLabel}</Button>\r\n            </div>\r\n            <div style={showWhenVisible}>\r\n                {props.children}\r\n                <Button onClick={toggleVisibility}>cancel</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nToggable.displayName = 'Togglable'\r\n\r\nToggable.propTypes = {\r\n    buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Toggable","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3003/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n    const config = {\r\n        headers: { Authorization: token }\r\n    }\r\n\r\n    const response = await axios.post(baseUrl, newObject, config)\r\n    return response.data\r\n}\r\n\r\nconst update = async (id, newBlog) => {\r\n    const response = await axios.put(`${baseUrl}/${id}`, newBlog)\r\n    return response.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n    const config = {\r\n        headers: { Authorization: token }\r\n    }\r\n    const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n    return response.data\r\n}\r\n\r\nconst comment = async (id, comment) => {\r\n    const response = await axios.post(`${baseUrl}/${id}/comments`, comment)\r\n    return response.data\r\n}\r\n\r\nexport default { getAll, create, setToken, update, remove, comment }","import blogService from '../services/blogs'\r\nimport { messageChange, messageReset } from '../reducers/messageReducer'\r\n\r\n\r\nconst blogsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n    case 'INITIATING':\r\n        return action.data\r\n    case 'ADD':\r\n        return state.concat(action.data)\r\n    case 'UPDATE':\r\n        return state.map(blog => blog.id !== action.data.updatedBlog.id ? blog : action.data.updatedBlog )\r\n    case 'DELETE':\r\n        return state.filter(blog => blog.id !== action.data)\r\n    case 'COMMENT':\r\n        return state.map(blog => blog.id !== action.data.commentedBlog.id ? blog : action.data.commentedBlog)\r\n    default: return state\r\n    }\r\n}\r\n\r\nexport const initiateBlogs = () => {\r\n    return async dispatch => {\r\n        const blogs = await blogService.getAll()\r\n        dispatch( {\r\n            type: 'INITIATING',\r\n            data: blogs.sort((a, b) => (a.likes < b.likes) ? 1 : -1)\r\n        })\r\n    }\r\n}\r\n\r\nexport const createBlog = (blogObject) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await blogService.create(blogObject)\r\n            dispatch({\r\n                type: 'ADD',\r\n                data: response\r\n            })\r\n            dispatch(messageChange('Blog created'))\r\n            setTimeout(() => {\r\n                dispatch(messageReset(null))\r\n            }, 5000)\r\n        } catch (error) {\r\n            dispatch(messageChange('Blog invalid'))\r\n            setTimeout(() => {\r\n                dispatch(messageReset(null))\r\n            }, 5000)\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const updateBlog = ( id, likedBlog ) => {\r\n    return async dispatch => {\r\n        try {\r\n            const updatedBlog = await blogService.update(id, likedBlog)\r\n            dispatch({\r\n                type: 'UPDATE',\r\n                data: { updatedBlog }\r\n            })\r\n        } catch(exception){\r\n            console.log(exception)\r\n        }\r\n    }}\r\n\r\nexport const deleteBlog =  ( id ) => {\r\n    return async dispatch => {\r\n        try {\r\n            await blogService.remove(id)\r\n            dispatch({\r\n                type: 'DELETE',\r\n                data: id\r\n            })\r\n        } catch(exception) {\r\n            console.log(exception)\r\n        }\r\n    }\r\n}\r\n\r\nexport const commentBlog = ( id, comment ) => {\r\n\r\n    return async dispatch => {\r\n\r\n        try {\r\n            const commentedBlog = await blogService.comment(id, comment)\r\n            dispatch({\r\n                type: 'COMMENT',\r\n                data: { commentedBlog }\r\n            })\r\n        } catch(exception) {\r\n            console.log(exception)\r\n        }\r\n    }\r\n}\r\nexport default blogsReducer","import React, { useRef } from 'react'\r\n//components\r\nimport Blog from './Blog'\r\nimport Login from './Login'\r\nimport Logout from './Logout'\r\nimport NewBlogForm from './NewBlogForm'\r\nimport Message from './Message'\r\nimport Toggable from './Toggable'\r\n\r\n//redux reducers\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { createBlog, deleteBlog, updateBlog } from '../reducers/blogsReducer'\r\n\r\n\r\nimport { Table } from 'react-bootstrap'\r\n\r\nconst Bloglist = () => {\r\n    const blogs = useSelector(state => state.blogs)\r\n    const user  = useSelector(state => state.user)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const blogFormRef = useRef()\r\n\r\n\r\n    const createNewBlog = (blogObject) => {\r\n        dispatch(createBlog(blogObject))\r\n        blogFormRef.current.toggleVisibility()\r\n    }\r\n\r\n\r\n    const somebodyLikedOMG = (id) => {\r\n        const blogEntry = blogs.find(blog => blog.id === id)\r\n        const likedBlog = { ...blogEntry, likes: blogEntry.likes +1 }\r\n        dispatch(updateBlog(id, likedBlog))\r\n    }\r\n\r\n    const handleDelete = async (blog) => {\r\n        if(window.confirm(`Delete blog ${blog.title} by ${blog.author}? `)) {\r\n            dispatch(deleteBlog(blog.id))\r\n        }}\r\n\r\n\r\n    if (user === null) {\r\n\r\n        return (\r\n            <div className='container text-center'>\r\n                <h2>Login</h2>\r\n                <Message />\r\n                <Login/>\r\n            </div>\r\n        )\r\n\r\n    } else {\r\n\r\n        return (\r\n            <div className='container'>\r\n                <div className='text-center mb-3'>\r\n                    <h2>blogs</h2>\r\n                    <Message />\r\n                    <Toggable buttonLabel='create entry' ref={blogFormRef}>\r\n                        <NewBlogForm createNewBlog={createNewBlog}/>\r\n                    </Toggable>\r\n                </div>\r\n                <Table striped className='mb-3'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Entry</th>\r\n                            <th>Details</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {blogs.map(blog => <Blog key={blog.id} blog={blog} somebodyLikedOMG={() => somebodyLikedOMG(blog.id)} handleDelete={() => handleDelete(blog)} />)}\r\n                    </tbody>\r\n                </Table>\r\n                <div className='text-center'>\r\n                    <Logout />\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Bloglist","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Users = () => {\r\n    const users = useSelector(state => state.users)\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <h1>Users</h1>\r\n            {users.map(user => <Link to={`/user/${user.id}`} key={user.id}><div><p>{user.name} {user.blogs.length}</p></div></Link>)}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Users","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Nav } from 'react-bootstrap'\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <div>\r\n            <Nav className=\"justify-content-center\" as='ul'>\r\n                <Nav.Item as='li'>\r\n                    <Nav.Link href=\"#\" as=\"span\">\r\n                        <Link to='/'>Home</Link>\r\n                    </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item as='li'>\r\n                    <Nav.Link href=\"#\" as=\"span\">\r\n                        <Link to='/users'>Users</Link>\r\n                    </Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\n\r\nconst UserView = ({ user }) => {\r\n\r\n    if (!user) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{user.name}</h1>\r\n            <h2> added blogs </h2>\r\n            <ul>\r\n                {user.blogs.map(blog => <li key={blog.id}>{blog.title}</li>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserView","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { commentBlog } from '../reducers/blogsReducer'\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst BlogView = ({ blog }) => {\r\n    const [comment, setComment] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const users = useSelector(state => state.users)\r\n\r\n    const author = users.find(user => user.name === blog.user.name)\r\n\r\n    const handleNewComment = (event) => {\r\n        event.preventDefault()\r\n        dispatch(commentBlog(blog.id, { comment }))\r\n        setComment('')\r\n    }\r\n\r\n    if (!blog) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className='d-flex justify-content-center'>\r\n            <Card style={{ width: '18rem' }} className='p-4'>\r\n                <div className='text-center'>\r\n                    <h1 className='text-center'>{blog.title}</h1>\r\n                    <p className='text-center'>link: <a href='' >{blog.url}</a></p>\r\n                    <p>{blog.likes} likes</p>\r\n                    {author ? <p>by: {author.name}</p> : null}\r\n                </div>\r\n                <div>\r\n                    <h4>Comments</h4>\r\n                    { blog.comments === [] ? <p>No comments yet.</p> : blog.comments.map(comment => <p key={comment}>{comment}</p>)}\r\n                </div>\r\n                <div>\r\n                    <h5>Add comment:</h5>\r\n                    <form onSubmit={handleNewComment}>\r\n                        <input className='mb-2' id=\"url\" type=\"text\" value={ comment } name=\"comment\" onChange={({ target }) => setComment(target.value)}></input>\r\n                        <button className=\"mb=2\" type='submit'>submit</button>\r\n                    </form>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogView","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3003/api/users'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll }","import usersService from '../services/user'\r\n\r\nconst usersReducer = (state = [], action ) => {\r\n    switch (action.type) {\r\n    case 'INITIATINGUSERS':\r\n        return action.data\r\n    default: return state\r\n    }\r\n}\r\n\r\n\r\nexport const initiateUsers = () => {\r\n    return async dispatch => {\r\n        const users = await usersService.getAll()\r\n        dispatch({\r\n            type:'INITIATINGUSERS',\r\n            data: users\r\n        })\r\n    }\r\n}\r\n\r\nexport default usersReducer","import React, { useEffect } from 'react'\r\nimport { Switch, Route, useRouteMatch } from 'react-router-dom'\r\nimport Bloglist from './components/Bloglist'\r\nimport Users from './components/Users'\r\nimport Menu from './components/Menu'\r\nimport UserView from './components/UserView'\r\nimport BlogView from './components/BlogView'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { addUser } from './reducers/userReducer'\r\nimport { initiateUsers } from './reducers/usersReducer'\r\nimport { initiateBlogs } from './reducers/blogsReducer'\r\nimport blogService from './services/blogs'\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch()\r\n    const users = useSelector(state => state.users)\r\n    const blogs = useSelector(state => state.blogs)\r\n\r\n    const matchUser  = useRouteMatch('/user/:id')\r\n    const user = matchUser ? users.find(user => user.id === matchUser.params.id) : null\r\n\r\n    const matchBlog = useRouteMatch('/blog/:id')\r\n    const blog = matchBlog ? blogs.find(blog => blog.id === matchBlog.params.id) : null\r\n\r\n    // get all blog entries\r\n    useEffect(() => {\r\n        dispatch(initiateBlogs())\r\n    }, [])\r\n\r\n    // get all users\r\n    useEffect(() => {\r\n        dispatch(initiateUsers())\r\n    }, [])\r\n\r\n    // get user info if user is logged in\r\n    useEffect(() => {\r\n        const loggedUserJSON = window.localStorage.getItem('loggedUser')\r\n        if(loggedUserJSON) {\r\n            const user = JSON.parse(loggedUserJSON)\r\n            dispatch(addUser(user))\r\n            blogService.setToken(user.token)\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Menu />\r\n            <Switch>\r\n                <Route path='/users'>\r\n                    <Users />\r\n                </Route>\r\n\r\n                <Route path='/user/:id'>\r\n                    <UserView user={user}/>\r\n                </Route>\r\n\r\n                <Route path='/blog/:id'>\r\n                    <BlogView blog={blog}/>\r\n                </Route>\r\n\r\n                <Route path='/'>\r\n                    <Bloglist />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default App","import { createStore, combineReducers,applyMiddleware } from 'redux'\r\nimport blogsReducer from './reducers/blogsReducer'\r\nimport userReducer from './reducers/userReducer'\r\nimport messageReducer from './reducers/messageReducer'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport usersReducer from './reducers/usersReducer'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    blogs: blogsReducer,\r\n    user: userReducer,\r\n    message: messageReducer,\r\n    users: usersReducer\r\n})\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport store from './store'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <Provider store={store} >\r\n            <App />\r\n        </Provider>\r\n    </Router>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}